var container, scene, camera, renderer, controls, tweenOpen, tweenClose, rotation = {},
	cube;
init();
animate();

function init() {
	scene = new THREE.Scene;
	var b = window.innerWidth,
		a = window.innerHeight;
	camera = new THREE.PerspectiveCamera(45, b / a, .1, 2E4);
	scene.add(camera);
	camera.position.set(0, 150, 400);
	camera.lookAt(scene.position);
	renderer = Detector.webgl ? new THREE.WebGLRenderer({
		antialias: !0
	}) : new THREE.CanvasRenderer;
	renderer.setSize(b, a);
	container = document.getElementById("ThreeJS");
	container.appendChild(renderer.domElement);
	THREEx.WindowResize(renderer, camera);
	controls = new THREE.TrackballControls(camera, renderer.domElement);
	b = new THREE.PointLight(13421772);
	b.position.set(0, 150, 100);
	scene.add(b);
	scene.fog = new THREE.FogExp2(10066431, 2.5E-4);
	b = new THREE.AmbientLight(6710886);
	scene.add(b);
	b = new THREE.BoxOpenGeometry(85, 85, 85);
	a = new THREE.ImageUtils.loadTexture("images/box.jpg");
	a = new THREE.MeshPhongMaterial({
		map: a,
		side: THREE.DoubleSide
	});
	b = new THREE.Mesh(b, a);
	scene.add(b);
	a = new THREE.PlaneGeometry(85, 42.5);
	a.applyMatrix((new THREE.Matrix4).makeRotationY(Math.PI / 2));
	a.applyMatrix((new THREE.Matrix4).makeTranslation(0, 21.25, 0));
	var c = new THREE.ImageUtils.loadTexture("images/box.jpg"),
		c = new THREE.MeshPhongMaterial({
			map: c,
			side: THREE.DoubleSide
		}),
		d = new THREE.Mesh(a, c);
	d.position.set(-42.5, 42.5, 0);
	d.rotation.z = -Math.PI / 2;
	b.add(d);
	a = new THREE.PlaneGeometry(85, 42.5);
	a.applyMatrix((new THREE.Matrix4).makeRotationY(Math.PI / 2));
	a.applyMatrix((new THREE.Matrix4).makeTranslation(0, 21.25, 0));
	c = new THREE.ImageUtils.loadTexture("images/box.jpg");
	c = new THREE.MeshPhongMaterial({
		map: c,
		side: THREE.DoubleSide
	});
	open2 = new THREE.Mesh(a, c);
	open2.position.set(42.5, 42.5, 0);
	open2.rotation.z = .5 * Math.PI;
	b.add(open2);
	rotation.value = d.rotation.z;
	a = function() {
		d.rotation.z = rotation.value;
		open2.rotation.z = -rotation.value
	};
	b = (new TWEEN.Tween(rotation)).to({
		value: .8 * Math.PI
	}, 1E3).delay(1E3).easing(TWEEN.Easing.Bounce.Out).onUpdate(a);
	a = (new TWEEN.Tween(rotation)).to({
		value: -Math.PI / 2
	}, 3E3).delay(2E3).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(a);
	b.chain(a);
	a.chain(b);
	b.start()
}

function animate() {
	requestAnimationFrame(animate);
	controls.update();
	TWEEN.update();
	render()
}
function render() {
	renderer.render(scene, camera)
};